 name: BI_project_QA_automation workflow

 # Triggers the workflow on push or pull request events but only for the "main" branch
 on:
    push:
         branches:
             - main

 # A workflow run is made up of one or more jobs that can run sequentially or in parallel
 jobs:
     pytest_qa_automation:
         runs-on:  [self-hosted] # to run on self hosted runner not public ubuntu-latest
         env:
           AGENT_TOOLSDIRECTORY: /tmp/github-runner-tool-cache
           RUNNER_TEMP: /tmp/github-runner-temp
         #services: #mysql service is not required
           #mysql:
             #image: mysql:8.0
             #ports:
              # - 3306:3306
         steps:
             - name: Show runner env
               run: |
                echo "Tool cache: $AGENT_TOOLSDIRECTORY"
                echo "Temp dir: $RUNNER_TEMP"

             - name: Show current user and shell
               run: |
                echo "User: $(whoami)"
                echo "Shell: $SHELL"

             - name: Install pyenv and Python
               run: |
              # Install pyenv via Homebrew
                 brew install pyenv

              # Set up pyenv environment
                 export PYENV_ROOT="$HOME/.pyenv"
                 export PATH="$PYENV_ROOT/bin:$PATH"
                 eval "$(pyenv init --path)"
                 eval "$(pyenv init -)"

              # Install Python (if not already installed)
                 pyenv install 3.12.2 -s
                 pyenv global 3.12.2

             - name: Checkout Repository
               uses: actions/checkout@v4

             #- name: Set up Python (Install Python 3.12)
               #uses: actions/setup-python@v4
              # with:
                 #python-version: "3.12"
                 #cache: "false"  # No need to cache (for now)
                 #update-environment: true

             - name: Install Dependencies # upgrade pip and install all dependencies required for project
               run: |
                   python -m pip install --upgrade pip
                   pip install -r requirements.txt

             - name: Export environment variables #exporting at job level does not make var available to all steps so writing to github_env file makes vars available of rest of all steps.
               run: |
                 echo "DATABASE= ${{secrets.DATABASE}}" >> $GITHUB_ENV
                 echo "PASSWORD= ${{secrets.PASSWORD}}" >> $GITHUB_ENV
                 echo "USER=root" >> $GITHUB_ENV
                 echo "HOST=mysql" >> $GITHUB_ENV 

             - name: Debug DB credentials are fetching #temporary
               run: |
                 echo "DATABASE = $DATABASE"
                 echo "DATABASE = ${{ secrets.DATABASE }}"

             #- name: Wait for MySQL to be ready
               #run: |
                 #for i in {1..5}; do
                    #if mysqladmin ping -h "mysql" --silent; then
                       #echo "MySQL is up!"
                       #break
                    #fi
                       #echo "Waiting for MySQL..."
                      # sleep 5  # Wait for 5 seconds before trying again
                 #done
             #- name: List running Docker containers #temporary
               #run: docker ps -a # list all the docker containers

             #- name: Show MySQL logs #temporary
               #run: docker logs <mysql_container_name>  # If using Docker service display logs
             #enable actions pipeline with write accesss

             - name: Run pytest command
               run: |
                   pytest -v -s -m stg_transactions_using_sql_alchemy

                 

