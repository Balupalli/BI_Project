 name: BI_project_QA_automation workflow

 # Triggers the workflow on push or pull request events but only for the "main" branch
 on:
    push:
         branches:
             - main

 # A workflow run is made up of one or more jobs that can run sequentially or in parallel
 jobs:
     pytest_qa_automation:
         runs-on: ubuntu-latest
         services: #mysql service is not required
           mysql:
             image: mysql:8.0
             ports:
               - 3306:3306
         steps:
             - name: Checkout Repository
               uses: actions/checkout@v4

             - name: Set up Python
               uses: actions/setup-python@v4
               with:
                   python-version: "3.13.1" #As per project requirement

             - name: Install Dependencies # upgrade pip and install all dependencies required for project
               run: |
                   python -m pip install --upgrade pip
                   pip install -r requirements.txt

             - name: Export environment variables #exporting at job level does not make var available to all steps so writing to github_env file makes vars available of rest of all steps.
               run: |
                 echo "DATABASE= ${{secrets.DATABASE}}" >> $GITHUB_ENV
                 echo "PASSWORD= ${{secrets.PASSWORD}}" >> $GITHUB_ENV
                 echo "USER=root" >> $GITHUB_ENV
                 echo "HOST=mysql" >> $GITHUB_ENV 

             - name: Debug DB credentials are fetching #temporary
               run: |
                 echo "DATABASE = $DATABASE"
                 echo "DATABASE = ${{ secrets.DATABASE }}"

             - name: Wait for MySQL to be ready
               run: |
                 for i in {1..10}; do
                    if mysqladmin ping -h "mysql" --silent; then
                       echo "MySQL is up!"
                       break
                    fi
                       echo "Waiting for MySQL..."
                       sleep 5  # Wait for 5 seconds before trying again
                 done
             - name: Show MySQL logs #temporary
               run: docker logs <mysql_container_name>  # If using Docker service

             - name: Run pytest command
               run: |
                   pytest -v -s -m stg_transactions_using_sql_alchemy -n 4

                 

